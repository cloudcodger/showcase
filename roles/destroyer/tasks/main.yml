---
- name: Make sure the 'destroyer_group' was provided.
  ansible.builtin.assert:
    that: destroyer_group | length > 1
    quiet: true

- name: Remove the public key from known_hosts for the machine.
  ansible.builtin.known_hosts:
    name: "{{ item }}"
    state: absent
  loop: "{{ groups[destroyer_group] }}"
  throttle: 1
  when:
    - "groups[destroyer_group] is defined"

- name: Remove the public key from known_hosts for the machine ansible_host.
  ansible.builtin.known_hosts:
    name: "{{ hostvars[item]['ansible_host'] }}"
    state: absent
  loop: "{{ groups[destroyer_group] }}"
  loop_control:
    label: "{{ hostvars[item]['ansible_host'] }}"
  throttle: 1
  when:
    - "groups[destroyer_group] is defined"

- name: Stop the Container.
  community.general.proxmox:
    api_host: "{{ lxc_pm_api_host }}"
    api_user: "{{ lxc_pm_api_user }}"
    api_token_id: ansible
    api_token_secret: "{{ lookup('file', '{{ secrets_dir }}/{{ lxc_pm_api_token_file }}') }}"
    force: true
    hostname: "{{ item }}"
    node: "{{ hostvars[item]['proxmox_node'] }}"
    state: stopped
  loop: "{{ groups[destroyer_group] }}"
  when:
    - "groups[destroyer_group] is defined"
    - "hostvars[item]['proxmox_vmtype'] == 'lxc'"

- name: Stop the VM.
  community.general.proxmox_kvm:
    api_host: "{{ cloud_init_pm_api_host }}"
    api_user: "{{ cloud_init_pm_api_user }}"
    api_token_id: ansible
    api_token_secret: "{{ lookup('file', '{{ secrets_dir }}/{{ cloud_init_pm_api_token_file }}') }}"
    force: true
    name: "{{ item }}"
    node: "{{ hostvars[item]['proxmox_node'] }}"
    state: stopped
  loop: "{{ groups[destroyer_group] }}"
  when:
    - "groups[destroyer_group] is defined"
    - "hostvars[item]['proxmox_vmtype'] == 'qemu'"

- name: Pause to let the LC or VM stop.
  ansible.builtin.pause:
    seconds: 5

- name: Remove the Container.
  community.general.proxmox:
    api_host: "{{ lxc_pm_api_host }}"
    api_user: "{{ lxc_pm_api_user }}"
    api_token_id: ansible
    api_token_secret: "{{ lookup('file', '{{ secrets_dir }}/{{ lxc_pm_api_token_file }}') }}"
    hostname: "{{ item }}"
    node: "{{ hostvars[item]['proxmox_node'] }}"
    state: absent
  loop: "{{ groups[destroyer_group] }}"
  when:
    - "groups[destroyer_group] is defined"
    - "hostvars[item]['proxmox_vmtype'] == 'lxc'"

- name: Remove the VM.
  community.general.proxmox_kvm:
    api_host: "{{ cloud_init_pm_api_host }}"
    api_user: "{{ cloud_init_pm_api_user }}"
    api_token_id: ansible
    api_token_secret: "{{ lookup('file', '{{ secrets_dir }}/{{ cloud_init_pm_api_token_file }}') }}"
    name: "{{ item }}"
    node: "{{ hostvars[item]['proxmox_node'] }}"
    state: absent
  loop: "{{ groups[destroyer_group] }}"
  when:
    - "groups[destroyer_group] is defined"
    - "hostvars[item]['proxmox_vmtype'] == 'qemu'"
