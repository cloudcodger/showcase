---
# The 'global' section doesn't seem to work.
# See the individual 'backend', 'read', and 'write'.

# global:
#   extraArgs:
#     - -config.expand-env=true
#   extraEnvFrom:
#     - secretRef:
#         name: rgw-access-key-secret

loki:
  auth_enabled: false
  storage:
    # Loki requires a bucket for chunks and the ruler. GEL requires a third bucket for the admin API.
    # Please provide these values if you are using object storage.
    # bucketNames:
    #   chunks: FIXME
    #   ruler: FIXME
    #   admin: FIXME
    type: s3
    bucketNames:
      chunks: "loki"
      admin: "loki-admin"
      ruler: "loki-ruler"
    s3:
      accessKeyId: ${AWS_ACCESS_KEY_ID}
      endpoint: s3
      insecure: true
      region: cephlab
      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
      s3ForcePathStyle: true
  schemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4

gateway:
  service:
    type: LoadBalancer
    loadBalancerIP: "192.168.6.176"
  ingress:
    enabled: true
    hosts:
     - host: loki
       paths:
         - path: /
           pathType: Prefix
    tls: []

deploymentMode: SimpleScalable

chunksCache:
  # -- Specifies whether memcached based chunks-cache should be enabled
  allocatedMemory: 2048

backend:
  replicas: 3
  extraArgs:
    - -config.expand-env=true
  extraEnvFrom:
    - secretRef:
        name: rgw-access-key-secret
read:
  replicas: 3
  extraArgs:
    - -config.expand-env=true
  extraEnvFrom:
    - secretRef:
        name: rgw-access-key-secret
write:
  replicas: 3
  extraArgs:
    - -config.expand-env=true
  extraEnvFrom:
    - secretRef:
        name: rgw-access-key-secret
  persistence:
    storageClass: ceph-rbd

# Enable minio for storage
# minio:
#   enabled: true

# Zero out replica counts of other deployment modes
singleBinary:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0
